{"version":3,"sources":["components/Messages/Messages.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/NavBar/NavBar.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/Profile.module.css","serviceWorker.js","components/Header/Header.jsx","components/NavBar/NavBar.jsx","components/Profile/MyPosts/Post/Post.jsx","redux/state.js","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Messages/Message/Message.jsx","components/Messages/Dialogue/Dialogue.jsx","components/Messages/Messages.jsx","components/News/News.jsx","components/Music/Music.jsx","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Header","className","S","header","header__wrapper","logo","src","alt","NavBar","navBar","nav","ul","elem","to","activeClassName","activeLink","Post","props","post","post_header","avatar_mini_wrapper","avatar_mini","post_header__text","user__name","post_date","post_body","text","store","_state","profilePage","posts","id","newPostText","messagesPage","dialogues","name","userId","messages","message","newMessageText","_callSubscriber","console","log","getState","this","subscribe","observer","dispatch","action","type","push","Error","MyPosts","postsArr","postsData","map","React","createRef","my_posts","write_post","write_post__title","textarea_wrapper","onChange","current","value","updateNewPostTextActionCreator","textarea","placeholder","ref","publish_btn","onClick","all_posts","ProfileInfo","about","avatar","description","city","answer","job","education","site","Profile","profile","Message","href","message_header","message_user_avatar","user_name","message_body","Dialogue","dialogue","dialogue_link","dialogue_user_avatar","dialogue_name","Messages","dialogueElements","state","messageElements","newMessage","messages_wrapper","dialogues_side","dialogues_list","messages_side","messages_side_wrapper","messages_list","write_message","updateNewMessageTextCreator","send_message","News","news","Music","music","App","path","render","component","rerenderDocument","ReactDOM","StrictMode","bind","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.1ea552c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__23KE0\",\"messages_wrapper\":\"Messages_messages_wrapper__ynInt\",\"avatar\":\"Messages_avatar__tFb1-\",\"dialogues_side\":\"Messages_dialogues_side__32B0_\",\"dialogue_link\":\"Messages_dialogue_link__3X4uK\",\"dialogue_user_avatar\":\"Messages_dialogue_user_avatar__3lpNc\",\"messages_list\":\"Messages_messages_list__dtXRI\",\"message\":\"Messages_message__3zI8q\",\"message_header\":\"Messages_message_header__MxrWX\",\"message_user_avatar\":\"Messages_message_user_avatar__3ZO2S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"about\":\"ProfileInfo_about__3jTMW\",\"avatar\":\"ProfileInfo_avatar__Yseeg\",\"name\":\"ProfileInfo_name__1MGLb\",\"description\":\"ProfileInfo_description__1cwcw\",\"answer\":\"ProfileInfo_answer__2UDkc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"NavBar_navBar__eRbTC\",\"ul\":\"NavBar_ul__vJ1ta\",\"elem\":\"NavBar_elem__2CVL_\",\"activeLink\":\"NavBar_activeLink__1W0zo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__mdNRG\",\"post_header\":\"Post_post_header__1kCul\",\"avatar_mini\":\"Post_avatar_mini__1_MzP\",\"avatar_mini_wrapper\":\"Post_avatar_mini_wrapper__3xfao\",\"post_header__text\":\"Post_post_header__text__13kxB\",\"post_date\":\"Post_post_date__3PMjG\",\"post_body\":\"Post_post_body__21pLj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"my_posts\":\"MyPosts_my_posts__1x-Jm\",\"textarea_wrapper\":\"MyPosts_textarea_wrapper__19zaH\",\"textarea\":\"MyPosts_textarea__c0QQd\",\"publish_btn\":\"MyPosts_publish_btn__1H82k\",\"all_posts\":\"MyPosts_all_posts__1tUW_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__wrapper\":\"Header_header__wrapper__2oir4\",\"logo\":\"Header_logo__TLS01\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2RTYH\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport S from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <section className={`${S.header} parent`}>\r\n            <div className={S.header__wrapper}>\r\n                <img className={S.logo} src=\"https://cs6.pikabu.ru/post_img/big/2015/08/04/8/1438696581_1674031880.png\" alt=\"Presents\" />\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport S from './NavBar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <section className={`${S.navBar} parent`}>\r\n            <nav className={S.nav}>\r\n                <ul className={S.ul}>\r\n                    <li className={S.elem}><NavLink to=\"/profile\" activeClassName={S.activeLink}>Profile</NavLink></li>\r\n                    <li className={S.elem}><NavLink to=\"/friends\" activeClassName={S.activeLink}>Friends</NavLink></li>\r\n                    <li className={S.elem}><NavLink to=\"/messages\" activeClassName={S.activeLink}>Messages</NavLink></li>\r\n                    <li className={S.elem}><NavLink to=\"/news\" activeClassName={S.activeLink}>News</NavLink></li>\r\n                    {/*<li className={S.elem}><NavLink to=\"/music\">Music</NavLink></li>*/}\r\n                    {/*<li className={S.elem}><NavLink to=\"/settings\">Settings</NavLink></li>*/}\r\n                </ul>\r\n            </nav>\r\n        </section>\r\n    )\r\n\r\n};\r\n\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport S from './Post.module.css'; //styles\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={S.post}>\r\n            <div className={S.post_header}>\r\n                <div className={S.avatar_mini_wrapper}>\r\n                <img src=\"https://im0-tub-ru.yandex.net/i?id=b92159f5b1315ee33202b84fd0e7ed78&n=13\" alt=\"Avatar\"\r\n                     className={S.avatar_mini}/>\r\n                </div>\r\n                <div className={S.post_header__text}>\r\n                    <NavLink to=\"/profile\" className={S.user__name}>Evgeniy Khristenko</NavLink>\r\n                    <span className={S.post_date}>09.04.2020</span>\r\n                </div>\r\n            </div>\r\n            <div className={S.post_body}>\r\n                {props.text}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Post;","//Action types\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\r\nconst ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\n\r\n//All data and methods of BLL\r\nconst store = {\r\n\r\n    _state: {\r\n        profilePage: {\r\n            posts: [{id: 1, text: 'I just had breakfast'}, {id: 2, text: 'I am not stupid'}],\r\n            newPostText: '',\r\n        },\r\n        messagesPage: {\r\n            dialogues: [{name: 'Evgeniy', userId: 1}, {name: 'Nikita', userId: 2}],\r\n            messages: [{id: 1, message: 'Hi'}, {id: 2, message: 'Hello'}],\r\n            newMessageText: '',\r\n        }\r\n    },\r\n    _callSubscriber() {\r\n        console.log('state changed')\r\n    },\r\n    getState: function () {\r\n        return this._state\r\n    },\r\n    subscribe(observer) {\r\n        this._callSubscriber = observer;\r\n    },\r\n\r\n    //All methods for interacting with ui\r\n    dispatch(action) {\r\n        if (action.type === ADD_POST) {\r\n            const post = {id: 3, text: this._state.profilePage.newPostText};\r\n            this._state.profilePage.posts.push(post);\r\n            this._state.profilePage.newPostText = '';\r\n            this._callSubscriber(this._state);\r\n\r\n        } else if (action.type === UPDATE_NEW_POST_TEXT) {\r\n            this._state.profilePage.newPostText = action.text;\r\n            this._callSubscriber(this._state);\r\n\r\n        } else if (action.type === ADD_MESSAGE) {\r\n            const message = {id: 2, message: this._state.messagesPage.newMessageText};\r\n            this._state.messagesPage.messages.push(message);\r\n            this._state.messagesPage.newMessageText = '';\r\n            this._callSubscriber(this._state);\r\n\r\n        } else if (action.type === UPDATE_NEW_MESSAGE_TEXT) {\r\n            this._state.messagesPage.newMessageText = action.text;\r\n            this._callSubscriber(this._state);\r\n        } else {\r\n            throw new Error('This method was not found');\r\n        }\r\n    }\r\n\r\n};\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST});\r\n\r\nexport const updateNewPostTextActionCreator = (text) => (\r\n    {type: UPDATE_NEW_POST_TEXT, text: text});\r\n\r\nexport const addMessageCreator = () => ({type: ADD_MESSAGE});\r\n\r\nexport const updateNewMessageTextCreator = (text) => (\r\n    {type: UPDATE_NEW_MESSAGE_TEXT, text: text});\r\n\r\n\r\n\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport S from './MyPosts.module.css'; //styles import\r\nimport Post from './Post/Post';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/state\";\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    const postsArr = props.postsData.map(post => <Post text={post.text}/>);\r\n    const newPostText = React.createRef();\r\n\r\n    const onPostTextChange = () => {\r\n        const text = newPostText.current.value;\r\n        props.dispatch(updateNewPostTextActionCreator(text));\r\n    };\r\n\r\n    const addPost = () => {\r\n        props.dispatch(addPostActionCreator());\r\n    };\r\n\r\n    return (\r\n        <div className={S.my_posts}>\r\n            <div className={S.write_post}>\r\n                <h2 className={S.write_post__title}>Write a post</h2>\r\n                <div className={S.textarea_wrapper}>\r\n                    <textarea onChange={onPostTextChange} value={props.newPostText} name=\"post\" className={S.textarea}\r\n                              placeholder=\"What's new?\" ref={newPostText}/>\r\n                    <button className={S.publish_btn} onClick={addPost}>Publish</button>\r\n                </div>\r\n            </div>\r\n            <div className={S.all_posts}>\r\n                {postsArr}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport S from './ProfileInfo.module.css';\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div className={S.about}>\r\n            <div className={S.avatar}></div>\r\n            <div className={S.description}>\r\n                <h1 className={S.name}>Evgeniy Khristenko</h1>\r\n                <p className={S.city}>City: <span className={S.answer}>Noviy Urengoy</span></p>\r\n                <p className={S.job}>Job: <span className={S.answer}>Front-end Dev</span></p>\r\n                <p className={S.education}>Education: <span className={S.answer}>No</span></p>\r\n                <p className={S.site}>Web-site: <span className={S.answer}>https://DgoniCarter.com</span></p>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport S from './Profile.module.css'; //styles import\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <section className={`${S.profile} parent`}>\r\n            <ProfileInfo/>\r\n            <MyPosts postsData={props.profilePage.posts}\r\n                     newPostText={props.profilePage.newPostText}\r\n                     dispatch={props.dispatch}\r\n            />\r\n        </section>\r\n    )\r\n\r\n};\r\n\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport S from './../Messages.module.css'; //styles\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <li className={S.message}>\r\n            <a href=\"#\" className={S.message_header}>\r\n                <img className={`${S.message_user_avatar} ${S.avatar} `}\r\n                     src=\"https://im0-tub-ru.yandex.net/i?id=b92159f5b1315ee33202b84fd0e7ed78&n=13\"\r\n                     alt=\"Avatar\"/>\r\n                <span className={S.user_name}>Evgeniy Khristenko</span>\r\n            </a>\r\n            <div className={S.message_body}>\r\n                {props.message}\r\n            </div>\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport S from './../Messages.module.css'; //styles\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst Dialogue = (props) => {\r\n    return (\r\n        <li className={S.dialogue}>\r\n            <NavLink to={`messages/${props.userId}`} className={S.dialogue_link}>\r\n                <img className={`${S.dialogue_user_avatar} ${S.avatar} `}\r\n                     src=\"https://avatars.mds.yandex.net/get-pdb/1767376/0de9f39a-c664-4469-847a-df2c22b1cc16/s1200?webp=false\"\r\n                     alt=\"Avatar\"/>\r\n                <span className={S.dialogue_name}>{props.name}</span>\r\n            </NavLink>\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default Dialogue;","import React from \"react\";\r\nimport S from \"./Messages.module.css\"\r\nimport Message from \"./Message/Message\";\r\nimport Dialogue from \"./Dialogue/Dialogue\";\r\nimport {addMessageCreator, updateNewMessageTextCreator} from \"../../redux/state\";\r\n\r\n\r\nconst Messages = (props) => {\r\n    const dialogueElements = props.state.dialogues.map(dialogue => <Dialogue userId={dialogue.userId}\r\n                                                                             name={dialogue.name}/>);\r\n    const messageElements = props.state.messages.map(message => <Message message={message.message}/>);\r\n    const newMessage = React.createRef();\r\n\r\n    const onMessageTextChange = () => {\r\n        const text = newMessage.current.value;\r\n        props.dispatch(updateNewMessageTextCreator(text));\r\n    };\r\n\r\n    const sendNewMessage = () => {\r\n        debugger;\r\n        props.dispatch(addMessageCreator());\r\n    };\r\n\r\n    return (\r\n        <section className={`${S.messages} parent`}>\r\n            <div className={S.messages_wrapper}>\r\n                <div className={S.dialogues_side}>\r\n                    <ul className={S.dialogues_list}>\r\n                        {dialogueElements}\r\n                    </ul>\r\n                </div>\r\n                <div className={S.messages_side}>\r\n                    <div className={S.messages_side_wrapper}>\r\n                        <ul className={S.messages_list}>\r\n                            {messageElements}\r\n                        </ul>\r\n                        <div className={S.write_message}>\r\n                            <textarea\r\n                                onChange={onMessageTextChange}\r\n                                value={props.newMessageText}\r\n                                ref={newMessage}\r\n                            />\r\n\r\n                            <button className={S.send_message}\r\n                                    onClick={sendNewMessage}>\r\n                                Send\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n};\r\n\r\nexport default Messages;","import React from \"react\";\r\nimport S from './News.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <section className={S.news}>\r\n\r\n        </section>\r\n    )\r\n};\r\n\r\nexport default News;\r\n","import React from 'react';\r\nimport S from './Music.module.css'\r\nconst Music = () => {\r\n    return (\r\n        <section className={S.music}>\r\n\r\n        </section>\r\n    )\r\n};\r\n\r\n\r\nexport default Music;","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header/Header';\r\nimport NavBar from './components/NavBar/NavBar';\r\nimport Profile from './components/Profile/Profile';\r\nimport Messages from './components/Messages/Messages';\r\nimport {Route} from 'react-router-dom';\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\n\r\nconst App = (props) => {\r\n    return (\r\n            <div className=\"page-wrapper\">\r\n                <Header/>\r\n                <div className=\"page-container\">\r\n                    <NavBar/>\r\n                    <Route path='/profile' render={() => <Profile\r\n                        profilePage={props.state.profilePage}\r\n                        dispatch={props.dispatch}\r\n                    />}/>\r\n\r\n                    <Route path='/messages' render={() => <Messages\r\n                        state={props.state.messagesPage}\r\n                        dispatch={props.dispatch}\r\n                    />}/>\r\n\r\n                    <Route path='/news' component={News}/>\r\n                    <Route path='/music' component={Music}/>\r\n                </div>\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default App;\r\n","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport store from './redux/state';\r\n\r\nconst rerenderDocument = (state) => {\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <BrowserRouter>\r\n                <App state={state} dispatch={store.dispatch.bind(store)}/>\r\n            </BrowserRouter>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    )\r\n};\r\n\r\nrerenderDocument(store.getState());\r\n\r\nstore.subscribe(rerenderDocument);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}